<div class="form-actions">
  <button type="button" onclick="location.href='@{ExtensionGeneratorController.exportExtensionWAR()}'" class="btn btn-primary" id="button-download-war">Export WAR Extension</button>
  <button type="button" onclick="location.href='@{ExtensionGeneratorController.exportExtensionEAR()}'" class="btn btn-primary" id="button-download-ear">Export EAR Extension</button>
  <button type="button" onclick="location.href='@{ExtensionGeneratorController.exportExtensionMavenProject()}'" class="btn btn-primary" id="button-download-maven">Export Extension Maven project</button>
</div>
<%
  public String addSelectedContent(def selectedResourcesList, def name, def title) {
   if(!selectedResourcesList.isEmpty()) {%>
    <li><h4><%=title%></h4></li>
    <table cellpadding='0' cellspacing='0' border='0' class='display dataTable grid_datatable' id='<%=name%>'>
        <% selectedResourcesList.each { selectedResource -> 
          if(selectedResource != null && !selectedResource.isEmpty()) {%>
            <tr class='gradeB'>
             <td class='gradeB'><%=selectedResource%></td>
            </tr>
        <% }
        }%>
    </table>
    <% 
   }
  }
  addSelectedContent(portalSiteSelectedNodes, "portalSitesSelectedResources", "Selected Portal Sites");
  addSelectedContent(groupSiteSelectedNodes, "groupSitesSelectedResources", "Selected Group Sites");
  addSelectedContent(userSiteSelectedNodes, "userSitesSelectedResources", "Selected User Sites");
  addSelectedContent(siteContentSelectedNodes, "siteContentSelectedResources", "Selected Sites Content");
  addSelectedContent(applicationCLVTemplatesSelectedNodes, "CLVTemplatesSelectedResources", "Selected CLV Templates");
  addSelectedContent(applicationSearchTemplatesSelectedNodes, "SearchTemplatesSelectedResources", "Selected Search Templates");
  addSelectedContent(documentTypeTemplatesSelectedNodes, "documentTypeTemplatesSelectedResources", "Selected Document Types Templates");
  addSelectedContent(metadataTemplatesSelectedNodes, "metadataTemplatesSelectedResources", "Selected Metadata Templates");
  addSelectedContent(taxonomySelectedNodes, "taxonomySelectedResources", "Selected Taxonomies");
  addSelectedContent(querySelectedNodes, "querySelectedResources", "Selected JCR Queries");
  addSelectedContent(driveSelectedNodes, "driveSelectedResources", "Selected Drives");
  addSelectedContent(scriptSelectedNodes, "scriptSelectedResources", "Selected ECMS Scripts");
  addSelectedContent(actionNodeTypeSelectedNodes, "actionNodeTypeSelectedResources", "Selected Action NodeTypes");
  addSelectedContent(nodeTypeSelectedNodes, "nodeTypeSelectedResources", "Selected NodeTypes");
  addSelectedContent(registrySelectedNodes, "registrySelectedResources", "Selected Application Registry Categories");
  addSelectedContent(viewTemplateSelectedNodes, "viewTemplatesSelectedResources", "Selected View Templates");
  addSelectedContent(viewConfigurationSelectedNodes, "viewConfigurationSelectedResources", "Selected View Configuration");
%>
<% if(!selectedResources.isEmpty()){ %>
  <script>
    paintTables();
  </script>
<% } %>