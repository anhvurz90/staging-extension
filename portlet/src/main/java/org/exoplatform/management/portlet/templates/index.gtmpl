<div id="staging" class="staging">
  <div ng-controller="StagingCtrl">
    <div class="uiBox modes">
      <div class="mode-items">
			<span class="uiRadio">
				<label class="radio">
					<input type="radio" name="mode" value="export" ng-model="mode" ng-click="changeMode('export')"/>
					<span>Export</span>
				</label>
			</span>
			<span class="uiRadio">
				<label class="radio">
					<input type="radio" name="mode" value="import" ng-model="mode" ng-click="changeMode('import')"/>
					<span>Import</span>
				</label>
			</span>
			<span class="uiRadio">
				<label class="radio">
					<input type="radio" name="mode" value="synchronize" ng-model="mode" ng-click="changeMode('synchronize')"/>
					<span>Synchronize</span>
				</label>
			</span>
      </div>
      <div class="mode-options clearfix">
        #{include path=modeImportOptions.gtmpl}#{/include}
        #{include path=modeSyncOptions.gtmpl}#{/include}
      </div>
    </div>

    <div class="buttons">
      <button type="button" class="btn btn-primary button-export" ng-click="exportResources()" ng-show="mode=='export'">Export</button>
      <button type="button" class="btn btn-primary button-import" ng-click="importResources()" ng-show="mode=='import' && readyToImport">Import</button>
      <button type="button" class="btn btn-primary button-synchronize" ng-click="synchronizeResources()" ng-show="mode=='synchronize'">Synchronize</button>
    </div>

    <div id="resultMessage" class="result-message alert {{resultMessageClass}}">{{resultMessage}}</div>

    <div class="resources-panel" ng-show="mode != 'import' || readyToImport">
      <div class="uiBox left-column">
        <h5 class="title">Resources Types</h5>
        <div class="uiTreeExplorer treeview">
          <ul>
            <div class="loader" ng-show="loadingCategoriesTree">Loading...</div>
            <li class="resource-category" ng-repeat="category in categories">
              <div class="{{category.expanded && 'collapseIcon' || 'expandIcon'}} clickable" ng-click="category.expanded = !category.expanded">
                <label class="clickable">{{category.label}}</label>
              </div>
              <ul ng-show="category.expanded">
                <li class="leaf" ng-repeat="subCategory in category.subcategories">
                  <span class="uiCheckbox"><input type="checkbox" id="{{subCategory.path}}" class="resource-category-checkbox" ng-model="categoriesModel[subCategory.path]"
                                                  ng-disabled="mode == 'import' && !categoriesModel[subCategory.path]"
                                                  ng-click="toggleCategorySelection(subCategory.path)"></input><span></span></span>
                  <label for="{{subCategory.path}}" class="{{loadingResources[subCategory.path] && 'resources-loader' || ''}} clickable">{{subCategory.label}}</label>
                  <div class="resources uiSearchInput" ng-show="mode != 'import' && categoriesModel[subCategory.path]">
                    <input type="text" class="search-resources" ng-model="resourcesSearchTerm.text" ng-disabled="!categoriesModel[subCategory.path]"></input>
                    <div class="resources-table">
                      <table class="table table-striped table-condensed">
                        <tr ng-repeat="resource in resources[subCategory.path] | filter:resourcesSearchTerm">
                          <td><span class="uiCheckbox"><input type="checkbox" ng-model="resource.selected"></input><span></span></span></td>
                          <td class="clickable" ng-click="resource.selected = !resource.selected">{{resource.text}}</td>
                        </tr>
                      </table>
                    </div>
                  </div>
                </li>
              </ul>
            </li>
          </ul>
        </div>
      </div>
      <div class="uiBox right-column">
        <h5 class="title">Selected Resources</h5>
        <div id="selectedResourcesForm">
          #{include path=selectedResources.gtmpl}#{/include}
        </div>
      </div>
    </div>

    <div class="buttons">
      <button type="button" class="btn btn-primary button-export" ng-click="exportResources()" ng-show="mode=='export'">Export</button>
      <button type="button" class="btn btn-primary button-import" ng-click="importResources()" ng-show="mode=='import' && readyToImport">Import</button>
      <button type="button" class="btn btn-primary button-synchronize" ng-click="synchronizeResources()" ng-show="mode=='synchronize'">Synchronize</button>
    </div>
  </div>
<div>

<script>
  // Bootstrap manually the ng application, since :
  // - it allows to correctly reinit the ng app after a (portal) page edition. Indeed, if we use the automatic init,
  //   when the (portal) page is edited and then saved, the module are not registered again, so they are not executed
  // - it is a good practice if we want to allow several ng app in the same html page (which could be the case with several portlets)
  var stagingAppRoot = document.getElementById('staging');
  var stagingApp = angular.module('stagingApp', []);
  stagingApp.controller('StagingCtrl', StagingCtrl);
  stagingApp.service('StagingService', StagingService);
  angular.bootstrap(stagingAppRoot, ['stagingApp']);
</script>


